<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gsoc on Vahab Jabrayilov's Blog</title><link>https://vjabrayilov.github.io/notes/tags/gsoc/</link><description>Recent content in gsoc on Vahab Jabrayilov's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 08 Sep 2022 10:03:50 +0400</lastBuildDate><atom:link href="https://vjabrayilov.github.io/notes/tags/gsoc/index.xml" rel="self" type="application/rss+xml"/><item><title>GSoC Final Submission Thanos</title><link>https://vjabrayilov.github.io/notes/posts/gsoc/</link><pubDate>Thu, 08 Sep 2022 10:03:50 +0400</pubDate><guid>https://vjabrayilov.github.io/notes/posts/gsoc/</guid><description>Overview The main goal was to support on the fly compaction of TSDB blocks without using any disk space or constant amount of the disk space. As analyzing, I came across with the following challenges:
TSDB blocks have a special structure and the main challenge stems from already big size of a single block. compactor module is written such that it operates on the already downloaded blocks, so nothing to be done here.</description></item></channel></rss>