<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design patterns on Vahab Jabrayilov's Blog</title><link>https://vjabrayilov.github.io/notes/tags/design-patterns/</link><description>Recent content in design patterns on Vahab Jabrayilov's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 06 Sep 2022 15:17:43 +0400</lastBuildDate><atom:link href="https://vjabrayilov.github.io/notes/tags/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Serverless: Securing Cloud via Serverless Design Patterns HotCloud'19</title><link>https://vjabrayilov.github.io/notes/posts/serverlessdesignpatterns/</link><pubDate>Tue, 06 Sep 2022 15:17:43 +0400</pubDate><guid>https://vjabrayilov.github.io/notes/posts/serverlessdesignpatterns/</guid><description>Review Authors have a security background and paper aims at utilizing serverless design patterns in security applications. They solely focus on AWS Lambda, and assume that all the responsibility to secure lambda execution lies on the cloud provider. However, customers are also responsible to secure their communication. They briefly describe six design patterns and how one can use them to develop a security oriented application.
Periodic Invocation Pattern represents the kind of models that invoke lambda functions periodically by using schedulers.</description></item></channel></rss>